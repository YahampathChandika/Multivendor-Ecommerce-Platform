# =============================================================================
# FASHIONHUB ECOMMERCE - ENVIRONMENT VARIABLES
# =============================================================================

# Copy this file to .env.local and fill in your actual values
# NEVER commit .env.local to version control

# =============================================================================
# SUPABASE CONFIGURATION
# =============================================================================

# Your Supabase project URL (found in Project Settings > General)
# Example: https://your-project-ref.supabase.co
NEXT_PUBLIC_SUPABASE_URL=

# Your Supabase anonymous key (found in Project Settings > API)
# This is safe to use in client-side code
NEXT_PUBLIC_SUPABASE_ANON_KEY=

# Your Supabase service role key (found in Project Settings > API)
# ⚠️ KEEP THIS SECRET - Only use server-side, never expose to client
SUPABASE_SERVICE_ROLE_KEY=

# =============================================================================
# APPLICATION CONFIGURATION (Optional)
# =============================================================================

# Your application URL (used for OAuth redirects)
# Development: http://localhost:3000
# Production: https://your-domain.com
NEXT_PUBLIC_APP_URL=http://localhost:3000

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. Create a Supabase account at https://supabase.com
# 2. Create a new project
# 3. Go to Project Settings > General to find your project URL
# 4. Go to Project Settings > API to find your keys
# 5. Copy the values above and paste them here
# 6. Set up Google OAuth in Supabase Dashboard:
#    - Go to Authentication > Settings
#    - Enable Google provider
#    - Add your Google OAuth credentials
#    - Add redirect URLs:
#      * http://localhost:3000/auth/callback (development)
#      * https://your-domain.com/auth/callback (production)
# 7. Run database migrations:
#    - Copy contents of supabase.sql
#    - Paste and run in Supabase SQL Editor
# 8. (Optional) Seed with sample data:
#    npm run upload-images && npm run seed-tshirts

# =============================================================================
# GOOGLE OAUTH SETUP
# =============================================================================

# 1. Go to Google Cloud Console (https://console.cloud.google.com)
# 2. Create a new project or select existing one
# 3. Enable Google+ API
# 4. Go to Credentials > Create Credentials > OAuth 2.0 Client ID
# 5. Set application type to "Web application"
# 6. Add authorized redirect URIs:
#    - https://your-project-ref.supabase.co/auth/v1/callback
# 7. Copy Client ID and Client Secret to Supabase Dashboard

# =============================================================================
# DEPLOYMENT ENVIRONMENT VARIABLES
# =============================================================================

# For production deployment, set these in your hosting platform:

# Vercel:
# - Go to Project Settings > Environment Variables
# - Add each variable with production values

# Netlify:
# - Go to Site Settings > Environment Variables
# - Add each variable with production values

# Railway/DigitalOcean:
# - Set environment variables in your deployment configuration

# =============================================================================
# DEVELOPMENT TIPS
# =============================================================================

# 1. Use .env.local for local development (automatically ignored by git)
# 2. Use .env.example as template (commit this to git)
# 3. Never commit actual API keys or secrets
# 4. Use different Supabase projects for development and production
# 5. Enable Row Level Security (RLS) on all tables in production

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# Common issues:
# 1. "Invalid API key" - Check NEXT_PUBLIC_SUPABASE_URL and keys match your project
# 2. "Authentication failed" - Verify Google OAuth setup and redirect URLs
# 3. "Database connection failed" - Ensure Supabase project is active and accessible
# 4. "Permission denied" - Check Row Level Security policies are properly configured

# Need help? 
# - Supabase docs: https://supabase.com/docs
# - Next.js docs: https://nextjs.org/docs
# - Project README: ./README.md